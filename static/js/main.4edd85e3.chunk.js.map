{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/Gallery/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/Gallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Gallery/ImageGallery/ImageGallery.styled.jsx","components/Gallery/ImageGallery/ImageGallery.jsx","App.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","services/pixabay-api.js","utils/utils.js","App.jsx","index.js"],"names":["Header","styled","header","Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","target","value","Li","li","ImageGalleryItem","src","alt","onClick","loading","Overlay","div","Modal","closeModal","useEffect","closingByEsc","code","window","addEventListener","removeEventListener","currentTarget","width","height","List","ul","ImageGallery","images","selectedImage","setSelectedImage","modalShow","map","idx","webformatURL","tags","largeImageURL","memo","AppContainer","Container","LoaderSpinner","color","LoadMoreButton","button","Button","handleIncrementPage","Error","children","api","fetchImages","page","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","toString","then","response","ok","json","Promise","rejected","isLastPageChecking","currentPage","totalQuentity","scrollTo","top","document","documentElement","scrollHeight","behavior","STATUS","App","setPage","galleryImages","setGalleryImages","status","setStatus","errorMessage","useRef","isLastPage","PixabayApi","hits","totalHits","state","current","catch","error","message","finally","isError","isShowLoader","isShowButton","newQuery","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4edd85e3.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  .SearchForm {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }\n\n  .SearchForm-button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  .SearchForm-button:hover {\n    opacity: 1;\n  }\n\n  .SearchForm-button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  .SearchForm-input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  .SearchForm-input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport default Header;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  /*func for submiting form*/\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query.trim()) {\n      alert('введите данные для запроса');\n      return;\n    }\n\n    onSubmit(query.trim());\n  };\n\n  return (\n    <Header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n        />\n      </form>\n    </Header>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Li = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  .ImageGalleryItem-image {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .ImageGalleryItem-image:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport default Li;\n","import PropTypes from 'prop-types';\nimport Li from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ src, alt, onClick }) => {\n  return (\n    <Li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        loading=\"lazy\"\n        onClick={onClick}\n      />\n    </Li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  .Modal {\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n  }\n`;\n\nexport default Overlay;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Overlay from './Modal.styled';\n\nconst Modal = ({ src, alt, closeModal }) => {\n  useEffect(() => {\n    /*func for closing modal by pressing Esc*/\n    const closingByEsc = e => {\n      if (e.code === 'Escape') closeModal();\n    };\n\n    window.addEventListener('keydown', closingByEsc);\n\n    return () => window.removeEventListener('keydown', closingByEsc);\n  }, [closeModal]);\n\n  /*func for closing modal by clicking on overlay*/\n  const closingByClick = e => {\n    if (e.currentTarget === e.target) closeModal();\n  };\n\n  return (\n    <Overlay className=\"Overlay\" onClick={closingByClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} width=\"1024\" height=\"768\" />\n      </div>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default List;\n","import { useState, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../../Modal';\r\nimport List from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({ images }) => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const modalShow = selectedImage !== null;\r\n\r\n  return (\r\n    <>\r\n      <List className=\"ImageGallery\">\r\n        {images.map(({ webformatURL, tags }, idx) => (\r\n          <ImageGalleryItem\r\n            key={idx}\r\n            src={webformatURL}\r\n            alt={tags}\r\n            onClick={() => setSelectedImage(idx)}\r\n          />\r\n        ))}\r\n      </List>\r\n\r\n      {modalShow && (\r\n        <Modal\r\n          src={images[selectedImage].largeImageURL}\r\n          alt={images[selectedImage].tags}\r\n          closeModal={() => setSelectedImage(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(ImageGallery);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import styled from '@emotion/styled';\n\nconst AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nexport default AppContainer;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default Container;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Container from './Loader.styled';\n\nconst LoaderSpinner = () => {\n  const options = {\n    type: 'ThreeDots',\n    color: '#eb4034',\n    height: 100,\n    width: 100,\n  };\n  return (\n    <Container>\n      <Loader {...options} />\n    </Container>\n  );\n};\n\nexport default LoaderSpinner;\n","import styled from '@emotion/styled';\n\nconst LoadMoreButton = styled.button`\n  margin: 32px auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    background-color: #303f9f;\n  }\n`;\n\nexport default LoadMoreButton;\n","import PropTypes from 'prop-types';\nimport LoadMoreButton from './Button.styled';\n\nconst Button = ({ handleIncrementPage }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={handleIncrementPage}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  handleIncrementPage: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  margin: 50px auto;\n  font-size: 20px;\n  font-weight: 700;\n  color: #b7b7b7;\n`;\n\nexport default Container;\n","import Container from './Error.styled';\r\n\r\nconst Error = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default Error;\r\n","const KEY = '22441039-e3c3a22ef42346706974d6393';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst ITEMS_PER_PAGE = 12;\n\n/*func for fetching images*/\nconst fetchImages = (query, page) => {\n  const searchParams = new URLSearchParams({\n    q: query,\n    page,\n    key: KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: ITEMS_PER_PAGE,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams.toString()}`).then(response => {\n    if (!response.ok) {\n      return Promise.rejected(new Error('Oops, something went wrong!'));\n    }\n    return response.json();\n  });\n};\n\n/*func for checking if current page is the last*/\nconst isLastPageChecking = (currentPage, totalQuentity) => {\n  return currentPage * ITEMS_PER_PAGE >= totalQuentity;\n};\n\nconst api = {\n  fetchImages,\n  isLastPageChecking,\n};\n\nexport default api;\n","const scrollTo = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default scrollTo;\n","import { useState, useEffect, useRef } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/Gallery/ImageGallery';\nimport AppContainer from './App.styled';\nimport LoaderSpinner from './components/Loader';\nimport Button from './components/Button';\nimport Error from './components/Error';\nimport PixabayApi from './services/pixabay-api';\nimport scrollTo from './utils';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n  ERROR: 'error',\n};\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(null);\n  const [galleryImages, setGalleryImages] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const errorMessage = useRef('');\n  const isLastPage = useRef(false);\n\n  useEffect(() => {\n    if (!page) return;\n    setStatus(STATUS.PENDING);\n\n    PixabayApi.fetchImages(query, page)\n      .then(({ hits, totalHits }) => {\n        page === 1\n          ? setGalleryImages([...hits])\n          : setGalleryImages(state => [...state, ...hits]);\n        isLastPage.current = !PixabayApi.isLastPageChecking(page, totalHits);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        errorMessage.current = error.message;\n        setStatus(STATUS.ERROR);\n      })\n      .finally(() => {\n        scrollTo();\n      });\n  }, [page, query]);\n\n  const isError = status === STATUS.ERROR;\n  const isShowLoader = status === STATUS.PENDING;\n  const isShowButton = status === STATUS.RESOLVED && isLastPage.current;\n\n  /*func for updating query-key and reset page*/\n  const onNewQuerySubmit = newQuery => {\n    if (query === newQuery) return;\n    setQuery(newQuery);\n    setPage(1);\n    setGalleryImages([]);\n  };\n\n  return (\n    <AppContainer>\n      <Searchbar onSubmit={onNewQuerySubmit} />\n      {!isError && <ImageGallery images={galleryImages} />}\n      {isError && <Error>{errorMessage.current}</Error>}\n      {isShowButton && (\n        <Button handleIncrementPage={() => setPage(page => page + 1)} />\n      )}\n      {isShowLoader && <LoaderSpinner />}\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}