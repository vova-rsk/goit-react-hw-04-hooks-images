{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","services/pixabay-api.js","utils/utils.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery/ImageGallery.jsx","App.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","App.jsx","index.js"],"names":["Header","styled","header","Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","target","value","Li","li","ImageGalleryItem","src","alt","dataSrc","index","onClick","loading","LoadMoreButton","button","Button","handleIncrementPage","api","fetchImages","page","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","toString","then","response","ok","json","Promise","rejected","Error","scrollTo","window","top","document","documentElement","scrollHeight","behavior","Overlay","div","Modal","closeModal","useEffect","closingByEsc","code","addEventListener","removeEventListener","currentTarget","width","height","List","ul","ImageGallery","currentStatus","statusChanging","setErrorMessage","setPage","searchResult","setSearchResult","modal","setModal","isLoadMoreBtnShow","setIsLoadMoreBtnShow","PixabayApi","hits","totalHits","state","catch","error","finally","showModal","Number","dataset","currentItem","find","item","idx","map","webformatURL","largeImageURL","tags","AppContainer","Container","LoaderSpinner","color","STATUS","App","status","setStatus","setError","isShowLoader","isShowError","statusName","message","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eaa7b244.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  .SearchForm {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }\n\n  .SearchForm-button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  .SearchForm-button:hover {\n    opacity: 1;\n  }\n\n  .SearchForm-button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  .SearchForm-input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  .SearchForm-input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport default Header;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  /*method for submiting form*/\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query.trim()) {\n      alert('введите данные для запроса');\n      return;\n    }\n\n    onSubmit(query.trim());\n  };\n\n  return (\n    <Header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n        />\n      </form>\n    </Header>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Li = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  .ImageGalleryItem-image {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .ImageGalleryItem-image:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport default Li;\n","import PropTypes from 'prop-types';\nimport Li from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ src, alt, dataSrc, index, onClick }) => {\n  return (\n    <Li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        data-src={dataSrc}\n        data-index={index}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        loading=\"lazy\"\n        onClick={onClick}\n      />\n    </Li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  dataSrc: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst LoadMoreButton = styled.button`\n  margin: 32px auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    background-color: #303f9f;\n  }\n`;\n\nexport default LoadMoreButton;\n","import PropTypes from 'prop-types';\nimport LoadMoreButton from './Button.styled';\n\nconst Button = ({ handleIncrementPage }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={handleIncrementPage}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  handleIncrementPage: PropTypes.func,\n};\n","const KEY = '22441039-e3c3a22ef42346706974d6393';\nconst PER_PAGE = 12;\n\nconst fetchImages = (query, page) => {\n  const baseUrl = 'https://pixabay.com/api/';\n  const searchParams = new URLSearchParams({\n    q: query,\n    page,\n    key: KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: PER_PAGE,\n  });\n\n  return fetch(`${baseUrl}?${searchParams.toString()}`).then(response => {\n    if (!response.ok) {\n      return Promise.rejected(new Error('Oops, something went wrong!'));\n    }\n    return response.json();\n  });\n};\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","const scrollTo = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default scrollTo;\n","import styled from '@emotion/styled';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  .Modal {\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n  }\n`;\n\nexport default Overlay;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Overlay from './Modal.styled';\n\nconst Modal = ({ src, alt, closeModal }) => {\n  useEffect(() => {\n    /*func for closing modal by pressing Esc*/\n    const closingByEsc = e => {\n      if (e.code === 'Escape') closeModal();\n    };\n\n    window.addEventListener('keydown', closingByEsc);\n\n    return () => window.removeEventListener('keydown', closingByEsc);\n  }, [closeModal]);\n\n  /*func for closing modal by clicking on overlay*/\n  const closingByClick = e => {\n    if (e.currentTarget === e.target) closeModal();\n  };\n\n  return (\n    <Overlay className=\"Overlay\" onClick={closingByClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} width=\"1024\" height=\"768\" />\n      </div>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default List;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../../Button';\nimport PixabayApi from '../../../services/pixabay-api';\nimport scrollTo from '../../../utils';\nimport Modal from '../../Modal';\nimport List from './ImageGallery.styled';\n\nconst ImageGallery = ({\n  query,\n  statusChanging,\n  setErrorMessage,\n  currentStatus,\n}) => {\n  const [page, setPage] = useState(null);\n  const [searchResult, setSearchResult] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [isLoadMoreBtnShow, setIsLoadMoreBtnShow] = useState(true);\n\n  /*Установка стартовой страницы и обнуление галлереи при смене ключа запроса*/\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setPage(1);\n    setSearchResult([]);\n  }, [query]);\n\n  /*Устаногвка статуса показа кнопки LoadMore в зависимости от состояния приложения*/\n  useEffect(() => {\n    currentStatus === 'resolve'\n      ? setIsLoadMoreBtnShow(true)\n      : setIsLoadMoreBtnShow(true);\n  }, [currentStatus]);\n\n  /*Запрос с обработкой при смене номера страницы*/\n  useEffect(() => {\n    // const changeStatus = (type) => {\n    //   statusChanging(type);\n    // };\n\n    if (!page) {\n      return;\n    }\n\n    // statusChanging('pending');\n    // changeStatus('pending');\n\n    PixabayApi.fetchImages(query, page)\n      .then(({ hits, totalHits }) => {\n        setSearchResult(state => [...state, ...hits]);\n        // changeStatus('resolved');\n      })\n      .catch(error => {\n        // changeStatus('error');\n      })\n      .finally(() => {\n        scrollTo();\n      });\n  }, [page, query]);\n\n  /*method for showing the modal*/\n  const showModal = e => {\n    const index = Number(e.currentTarget.dataset.index);\n    const currentItem = searchResult.find((item, idx) => idx === index);\n    setModal(currentItem);\n  };\n\n  /*method for closing the modal*/\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  /*method for incrementing the page number by 1*/\n  const handleIncrementPage = () => {\n    setPage(page => page + 1);\n  };\n\n  return (\n    <>\n      <List className=\"ImageGallery\">\n        {searchResult.map(({ webformatURL, largeImageURL, tags }, idx) => (\n          <ImageGalleryItem\n            key={idx}\n            src={webformatURL}\n            index={idx}\n            dataSrc={largeImageURL}\n            alt={tags}\n            onClick={showModal}\n          />\n        ))}\n      </List>\n      {isLoadMoreBtnShow && (\n        <Button handleIncrementPage={handleIncrementPage} />\n      )}\n      {modal && (\n        <Modal\n          src={modal.largeImageURL}\n          alt={modal.tags}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n  statusChanging: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired,\n  currentStatus: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nexport default AppContainer;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default Container;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Container from './Loader.styled';\n\nconst LoaderSpinner = () => {\n  const options = {\n    type: 'ThreeDots',\n    color: '#eb4034',\n    height: 100,\n    width: 100,\n  };\n  return (\n    <Container>\n      <Loader {...options} />\n    </Container>\n  );\n};\n\nexport default LoaderSpinner;\n","import { useState } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport AppContainer from './App.styled';\nimport LoaderSpinner from './components/Loader';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n  ERROR: 'error',\n};\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState('');\n\n  /*func for getting query-data from components*/\n  const fetchQueryUpdate = query => {\n    setQuery(query);\n  };\n\n  /*func for setting status in local state*/\n  const statusChanging = statusName => {\n    setStatus(statusName);\n  };\n\n  /*func for setting error-message in local state*/\n  const setErrorMessage = message => {\n    setError(message);\n  };\n\n  const isShowLoader = status === 'pending' ? true : false;\n  const isShowError = status === STATUS.ERROR ? true : false;\n\n  return (\n    <AppContainer>\n      <Searchbar onSubmit={fetchQueryUpdate} />\n      {!isShowError && (\n        <ImageGallery\n          query={query}\n          statusChanging={statusChanging}\n          setErrorMessage={setErrorMessage}\n          currentStatus={status}\n        />\n      )}\n      {isShowError && <div>{error}</div>}\n      {isShowLoader && <LoaderSpinner />}\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}